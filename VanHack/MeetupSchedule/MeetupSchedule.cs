using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using Xunit;

namespace MeetupSchedule
{
    class MeetupSchedule
    {

        public static int countMeetings(List<int> firstDay, List<int> lastDay)
        {
            Console.WriteLine($"First Day {string.Join(",", firstDay)}");

            var maxDay = lastDay.Max();
            var days = new int[maxDay + 1];

            var investidorsSorted = firstDay.Zip(lastDay, (first, last) => (first, last)).OrderBy(x => x.Item2).ToArray();

            var scheduleCount = 0;
            foreach (var investorDaysRange in investidorsSorted)
            {
                int nextAvaiability = HasAvailability(days, investorDaysRange.Item1, investorDaysRange.Item2);
                if (nextAvaiability != 0)
                {
                    days[nextAvaiability] = 1;
                    scheduleCount++;
                }
            }

            return scheduleCount;
        }

        private static int HasAvailability(int[] days, int initial, int final)
        {
            for (int i = initial; i <= final; i++)
            {
                if (days[i] == 0)
                    return i;
            }

            return 0;
        }

    }

    public class TestClass
    {

        [Fact]
        public void TestCase0()
        {
            var result = MeetupSchedule.countMeetings(new List<int> { 1, 1, 2 }, new List<int> { 1, 2, 2 });

            Assert.Equal(2, result);
        }
        [Fact]
        public void TestCase1()
        {
            var result = MeetupSchedule.countMeetings(new List<int> { 1, 2, 1, 2, 2 }, new List<int> { 3, 2, 1, 3, 3 });

            Assert.Equal(3, result);
        }

        [Fact]
        public void TestCase2()
        {
            var result = MeetupSchedule.countMeetings(new List<int> { 1, 10, 11 }, new List<int> { 11, 10, 11 });

            Assert.Equal(3, result);
        }

        //[Fact]
        //public void TestCase8() {
        //    var result = Result.countMeetings(
        //        new List<int> { 46693, 33021, 56132, 21178, 26056, 64131, 5330, 88694, 15067, 44401, 49653, 22435, 1924, 59205, 39570, 16591, 58273, 55543, 57671, 29310, 97092, 96746, 7106, 78309, 70235, 51410, 12800, 27354, 92877, 44857, 54491, 23111, 79363, 9811, 60932, 61739, 17432, 71411, 49340, 12736, 14598, 70800, 47286, 31617, 11478, 18535, 66350, 18051, 87412, 1664, 30824, 54540, 17264, 22199, 60951, 80736, 93763, 45898, 68314, 60048, 8542, 67819, 55131, 3764, 42903, 34734, 10505, 34192, 14314, 32158, 27683, 99007, 61750, 58218, 55814, 33864, 76283, 20715, 56970, 18380, 59713, 39257, 86148, 99560, 10885, 16980, 66544, 34951, 67839, 11821, 16531, 66204, 40981, 46329, 56762, 2716, 54391, 1559, 47040, 53166, 8858, 50069, 33157, 61924, 35004, 87975, 81295, 60096, 32934, 76192, 24963, 65720, 48969, 35652, 68469, 95438, 63344, 63932, 62428, 26296, 30275, 61485, 33992, 67448, 56472, 76033, 62550, 35983, 99715, 58316, 89757, 50181, 80663, 45903, 20009, 94142, 12455, 17120, 20305, 38405, 17532, 34313, 25097, 1708, 8399, 50531, 80960, 5546, 390, 3289, 15805, 28055, 22330, 64747, 10364, 12416, 27856, 39198, 91725, 8687, 51474, 27074, 14458, 91882, 61347, 19897, 11227, 58169, 75016, 48699, 91222, 62539, 24389, 13254, 28770, 54068, 39759, 53958, 24005, 61338, 81002, 44950, 17419, 94951, 46005, 92436, 16788, 85810, 24237, 24848, 39252, 55600, 361, 43012, 44378, 91788, 66198, 73365, 92132, 52662, 91170, 72438, 89597, 4065, 53758, 43459, 61094, 51566, 12012, 20375, 55104, 69805, 63698, 73631, 52333, 90246, 25353, 66639, 2782, 52820, 86684, 9762, 11749, 38726, 79541, 95703, 62526, 17744, 50448, 52436, 8557, 37807, 42339, 73203, 33027, 60974, 61344, 97831, 30700, 19131, 3510, 26590, 72787, 51491, 1190, 7149, 24489, 43419, 5201, 53061, 77949, 19156, 39811, 28934, 67196, 61594, 51221, 81393, 32918, 40193, 797, 381, 69662, 73564, 1490, 33353, 18879, 53352, 9382, 84205, 8089, 14835, 36288, 39029, 50475, 2452, 17783, 60920, 57538, 11455, 84680, 12822, 35284, 20376, 87604, 66760, 11468, 45545, 37801, 76655, 60373, 59192, 11861, 2095, 66642, 22909, 41230, 481, 14157, 95350, 33369, 56559, 6855, 49848, 14594, 58131, 74642, 90314, 11622, 94864, 32771, 52976, 73620, 95909, 96755, 52827, 37352, 30162, 78832, 21995, 91834, 35763, 75011, 91082, 1122, 69296, 35366, 93415, 59451, 97012, 44082, 33307, 77455, 67934, 29550, 3057, 39390, 57631, 7114, 31082, 92299, 27767, 23160, 73548, 60106, 12408, 44595, 20726, 59514, 49579, 573, 34774, 74750, 68101, 34315, 19016, 11775, 94242, 26874, 19946, 87378, 2050, 54428, 44878, 26310, 97904, 91, 3164, 55610, 25370, 75301, 4099, 13232, 50399, 86268, 82074, 30628, 97941, 88209, 90266, 60322, 92314, 90165, 87720, 16790, 4936, 51617, 71079, 57043, 38807, 36661, 90998, 157, 25267, 52233, 60305, 63652, 59661, 98197, 99342, 98388, 90456, 40457, 10473, 12099, 66039, 35153, 77636, 61038, 6194, 26497, 22026, 69266, 63155, 88966, 4998, 45063, 56559, 69683, 72504, 14381, 93335, 75527, 98036, 76220, 86595, 39067, 46330, 83415, 25196, 944, 26512, 80727, 69603, 63507, 99468, 5926, 46805, 71920, 10822, 9145, 19567, 952, 92444, 26026, 46640, 79583, 11259, 69559, 6748, 85653, 97001, 22990, 87135, 3202, 46941, 89034, 36537, 71547, 63322, 22327, 78385, 10107, 78756, 79371, 73722, 56121, 37081, 74229, 2631, 18171, 85703, 16807, 5789, 16047, 63676, 29040, 77491, 95160, 72979, 40241, 98741, 25500, 55854, 81842, 66942, 64179, 48650, 32474, 82432, 74422, 54357, 68572, 25496, 10686, 23701, 52348, 73895, 65104, 98210, 79579, 86584, 53639, 38255, 37239, 20377, 84649, 50971, 12664, 39427, 8158, 50833, 11857, 1929, 62288, 92626, 3254, 17014, 98722, 99849, 83061, 11695, 61712, 7328, 75358, 97196, 83189, 62580, 60219, 4471, 59177, 48915, 64717, 22276, 90526, 9836, 52053, 89846, 41857, 59575, 53850, 10639, 50555, 47687, 96533, 23009, 63201, 31294, 80725, 27294, 83414, 59212, 65048, 53786, 72531, 67391, 39860, 27829, 45551, 34705, 57821, 39182, 63605, 35392, 83181, 12472, 90000, 15353, 40497, 84430, 36630, 65883, 86572, 61438, 43175, 52768, 68363, 32585, 53475, 21349, 40210, 57367, 55411, 78389, 78656, 22242, 56185, 52773, 83422, 1157, 60256, 67317, 3746, 24820, 72197, 9309, 24646, 40066, 22925, 13142, 14580, 46885, 53052, 83646, 64164, 42306, 19633, 58140, 55627, 45985, 6373, 17537, 46934, 64522, 11561, 65730, 60011, 44931, 29008, 97731, 68297, 89587, 42239, 76152, 69167, 79709, 96180, 89360, 8610, 33092, 55127, 34637, 49090, 11869, 61739, 35389, 38404, 79760, 38838, 94147, 97707, 4976, 99413, 66261, 50584, 12381, 6625, 82621, 58528, 20120, 35380, 10446, 52828, 65135, 67849, 66492, 50344, 85093, 63394, 99798, 48204, 33999, 68395, 29991, 63143, 41334, 39802, 71758, 51734, 58564, 36491, 16271, 68645, 55148, 58705, 58605, 42414, 75214, 64405, 40761, 45911, 99640, 37929, 71470, 50227, 81768, 55003, 75407, 41338, 38649, 68700, 29794, 76326, 17607, 27890, 36541, 27894, 46025, 93757, 73596, 38568, 22330, 30504, 52137, 38507, 26001, 50248, 5455, 51881, 92375, 96459, 25174, 47846, 33338, 64245, 51665, 36440, 69359, 56901, 17687, 42911, 22671, 826, 3966, 99125, 36000, 53993, 72265, 67600, 83961, 41068, 37141, 95956, 62223, 84343, 89623, 31596, 61479, 90350, 52463, 26511, 35911, 6464, 19104, 18588, 81833, 66891, 70, 88998, 1810, 96248, 23478, 70306, 65395, 95701, 31598, 96462, 70017, 99683, 17629, 54719, 58389, 71656, 68353, 37348, 9469, 7285, 72327, 51440, 16614, 52698, 90177, 72868, 41172, 44147, 44175, 6320, 46542, 7549, 89266, 35196, 13549, 81150, 65344, 35184, 83166, 96241, 31714, 48351, 52158, 10310, 45819, 46483, 77296, 16487, 27511, 87909, 2087, 93977, 33709, 75610, 46239, 80712, 7887, 73885, 44380, 92115, 70134, 26078, 86716, 65327, 8385, 88043, 20923, 22695, 88870, 85339, 56869, 81841, 47859, 65588, 73836, 31, 61861, 64826, 50647, 18214, 24156, 33517, 28332, 31599, 2018, 87095, 89493, 42144, 8559, 84183, 18668, 78217, 92325, 78387, 46666, 28499, 48279, 43823, 42651, 77460, 11029, 76876, 96883, 95841, 11603, 81847, 17047, 99781, 53025, 65908, 5393, 95112, 194, 33475, 12238, 62718, 30706, 52651, 43149, 19978, 36299, 50707, 40037, 9082, 24188, 68075, 57496, 83930, 10936, 26011, 43912, 31882, 61604, 56060, 19837, 20786, 37062, 15137, 4911, 12861, 18735, 96455, 96128, 91407, 85070, 47349, 5016, 73916, 38258, 84743, 83618, 4267, 46587, 77964, 26958, 90037, 67227, 54187, 76848, 48687, 61974, 80036, 15282, 52629, 14750, 32471, 86825, 14844, 9321, 20997, 37566, 95200, 81215, 78223, 34756, 79646, 69962, 76195, 81873, 30506, 38050, 47678, 22370, 55024, 34014, 71474, 62990, 72358, 44665, 44397, 18053, 62085, 59858, 7616, 31929, 43082, 22130, 13505, 62741, 37224, 25128, 23609, 15131, 57860, 14211, 26831, 94849, 68348, 70313, 4739, 59441, 15099, 43951, 12082, 39493, 58672, 49863, 68500, 25271, 82674, 89482, 87681, 3405, 33370, 66952, 721, 56310, 17478, 42005, 91187, 11625, 46901, 3855, 869, 10767, 12234, 89860, 81155, 64488, 62326, 66990, 44027, 75266, 1755, 14339, 15443, 47392, 42212, 19937, 41966, 99756, 24349, 64415, 43898, 3772, 77356, 91533, 96210, 27040, 52996, 62783, 37383, 64876, 61771, 49768, 75404, 569, 64807, 40568, 41203, 10901, 25021, 23510, 91244, 63034, 62199, 72321, 62850, 33068, 89198, 59156, 64919, 77163, 68866, 88149, 14584, 66130, 62038, 38494, 36747, 35003, 4732, 81016, 56033, 81252, 67235, 17608, 73269, 96343, 62955, 56562, 28728, 28597, 19743, 88468, 65988, 74641, 78968, 46789, 44258, 39264, 39129, 17839, 33189, 84910, 16101, 40297, 40257, 63413, 28752, 40827, 42072, 91638, 53935, 29439, 81654, 36581, 53187, 86851, 46633, 62486, 85676, 88996, 25433, 79411, 81885, 92982, 45368, 47662, 56193, 15974, 90697, 17881, 31743, 8896, 69385, 33363, 59965, 82885, 46485, 34326, 61135, 56011, 64769, 10276, 6727, 25482, 28702, 33666, 51752, 16253, 95034, 33842, 56289, 52304, 41071, 22122, 61236, 87365, 97851, 7418, 51756, 26341, 3378, 84779, 10456, 57943, 91466, 67962, 9608, 83173, 82420, 19165, 82811, 70928, 78136, 10116, 94489, 35164, 62755, 47288, 34887, 95329, 28601, 76320, 42233, 46420, 95730, 70038, 41415, 1946, 41563, 74205, 69593, 44499, 191, 78006, 23275, 88055, 17971, 58250, 76239, 81636, 92571, 36764, 63210, 82517, 15413, 75585, 95551, 81987, 32256, 33051, 77697, 54082, 83506, 54520, 73164, 64444, 54535, 35673, 33424, 77031, 65240, 2969, 28559, 11385, 25478, 13528, 15271, 48840, 64331, 50174, 75562, 84862, 64745, 2414, 44702, 11236, 37173, 80127, 6276, 27199, 72368, 68740, 53848, 1456, 39476, 38245, 32584, 27966, 33918, 96143, 69866, 19338, 22723, 90308, 16061, 59446, 44022, 13788, 54864, 41836, 22271, 94322, 61645, 95896, 72227, 21089, 56982, 80841, 79491, 47989, 14249, 49154, 53758, 57906, 54030, 99543, 94161, 67199, 14564, 25412, 82949, 68350, 87613, 25644, 77406, 29126, 14042, 24091, 84402, 50461, 92999, 76080, 65954, 17506, 25835, 71378, 77917, 87041, 32158, 13359, 42762, 58141, 48080, 6747, 53701, 46735, 41472, 57236, 25247, 8874, 241, 84586, 46833, 97831, 9882, 18949, 76297, 88278, 63529, 55442, 50953, 75079, 79353, 44547, 89989, 76691, 63901, 63168, 15739, 88926, 77269, 47257, 97004, 20953, 8131, 63736, 63953, 7789, 45193, 42331, 5670, 13003, 40980, 19288, 22056, 33639, 20486, 45147, 84857, 47640, 56391, 46107, 84134, 93090, 70485, 72773, 40748, 4249, 42497, 20668, 79691, 28464, 35682, 64936, 97805, 94309, 20714, 53243, 36818, 46227, 77197, 1623, 8186, 51750, 10166, 82009, 54442, 35596, 15618, 77104, 18472, 77760, 41949, 462, 67933, 39466, 68689, 50327, 97253, 89798, 40132, 90791, 12872, 145, 95847, 23810, 28432, 74049, 72475, 58110, 99273, 19671, 43505, 11499, 32964, 90427, 37602, 50760, 67330, 75189, 43733, 69719, 30354, 40410, 25361, 4406, 94772, 66203, 62289, 89703, 59735, 47393, 17087, 39784, 15801, 83731, 60894, 34523, 51122, 32435, 16357, 59555, 91438, 64642, 25861, 57477, 9549, 60218, 97003, 43144, 7370, 18440, 38193, 97203, 57, 47827, 37521, 44452, 68550, 55182, 45696, 17179, 38652, 4682, 91125, 21002, 99538, 96644, 79382, 35444, 71803, 10410, 12521, 57308, 46882, 83673, 55968, 17389, 79084, 56431, 18100, 1162, 99759, 13023, 1033, 15967, 45126, 19946, 48964, 20824, 35292, 67623, 6857, 26634, 823, 56209, 89577, 61271, 42247, 6900, 15560, 8668, 36551, 45120, 8773, 72094, 29031, 5032, 20432, 59666, 81103, 33761, 85790, 34476, 49671, 85205, 52654, 95664, 37307, 24939, 79594, 43794, 79365, 40262, 40493, 19533, 44123, 79078, 48137, 69308, 43496, 14375, 63706, 53606, 52837, 42949, 74900, 57150, 48584, 43910, 15974, 48134, 80467, 20636, 39502, 7370, 34940, 74235, 49244, 81620, 89632, 4905, 39040, 14467, 76252, 62188, 45142, 83859, 87097, 59961, 7798, 85083, 85314, 97547, 98409, 64348, 83154, 53419, 18731, 67969, 28444, 21152, 60546, 15437, 64483, 38011, 61789, 43052, 61946, 74390, 75758, 28713, 78440, 44613, 64908, 99635, 59420, 95008, 44742, 46828, 23586, 74260, 29872, 64292, 58822, 69155, 33034, 118, 15629, 1486, 26074, 24761, 82984, 57396, 76294, 61239, 51652, 12119, 61289, 21249, 20203, 60734, 60144, 64418, 81474, 56348, 40962, 24196, 40085, 32089, 63398, 24226, 4749, 58290, 99992, 84971, 339, 60461, 33348, 18663, 46243, 8982, 20237, 16581, 77718, 80108, 77112, 80455, 46549, 48724, 72698, 71199, 52785, 10445, 77689, 9139, 40575, 63616, 73016, 21525, 46455, 53927, 37778, 3476, 94094, 75434, 67736, 90224, 21306, 54213, 86268, 98421, 14175, 64586, 86750, 94170, 76241, 89415, 42599, 47781, 2669, 64415, 18100, 70003, 22501, 11179, 16915, 39790, 43718, 87325, 20000, 24839, 49052, 81754, 76928, 97520, 43280, 6249, 92284, 92769, 65761, 71839, 80222, 52007, 10146, 99954, 17886, 16006, 86208, 66319, 16191, 79117, 76774, 57039, 26503, 73130, 76635, 33352, 22609, 72689, 55559, 62612, 44366, 21869, 48262, 67927, 23820, 31611, 78780, 68441, 91944, 70945, 25580, 70989, 24548, 73605, 93802, 43493, 1909, 61738, 80893, 90801, 89218, 32923, 81967, 20963, 99843, 89832, 20438, 5586, 46062, 8232, 49103, 60252, 22037, 86215, 91089, 25725, 20272, 24251, 93576, 40786, 40762, 19340, 61826, 77388, 1057, 22114, 28114, 79631, 89356, 17998, 81840, 34975, 12748, 1613, 305, 76722, 93138, 99241, 34636, 63060, 65525, 80774, 26344, 35061, 84269, 18146, 79830, 9976, 36168, 74516, 79622, 56891, 93573, 38224 },
        //        new List<int> { 11, 10, 11 });

        //    Assert.Equal(3, result);
        //}

        //[Fact]
        //public void TestCase9() {
        //    var result = Result.countMeetings(new List<int> { 1, 10, 11 }, new List<int> { 11, 10, 11 });

        //    Assert.Equal(3, result);
        //}


        [Fact]
        public void CustomTestCase1()
        {
            var result = MeetupSchedule.countMeetings(new List<int> { 1, 2, 3, 2, 1 }, new List<int> { 5, 4, 3, 2, 1 });

            Assert.Equal(5, result);
        }

        [Fact]
        public void CustomTestCase2()
        {
            var result = MeetupSchedule.countMeetings(new List<int> { 1, 2, 3, 2, 1, 1, 2, }, new List<int> { 3, 4, 3, 2, 1, 5, 4 });

            Assert.Equal(5, result);
        }
    }
}
